import { InjectionToken, inject } from '@angular/core';
import { createFeature, } from './features';
export const NgIconPreProcessorToken = new InjectionToken('Ng Icon Pre Processor');
export const NgIconPostProcessorToken = new InjectionToken('Ng Icon Post Processor');
export function injectNgIconPreProcessor() {
    return inject(NgIconPreProcessorToken, { optional: true }) ?? (icon => icon);
}
export function injectNgIconPostProcessor() {
    return inject(NgIconPostProcessorToken, { optional: true }) ?? (() => { });
}
function preprocessIcon(icon) {
    // rename all style attributes to data-style to avoid being blocked by the CSP
    return icon.replace(/style\s*=/g, 'data-style=');
}
function postprocessIcon(element) {
    // find all elements with a data-style attribute and get the styles from it
    // and apply them to the element using the style property and remove the data-style attribute
    const elements = element.querySelectorAll('[data-style]');
    for (const element of Array.from(elements)) {
        const styles = element.getAttribute('data-style');
        styles?.split(';').forEach(style => {
            const [property, value] = style.split(':');
            element.style[property.trim()] = value.trim();
        });
        element.removeAttribute('data-style');
    }
}
/**
 * Process icons in a way that is compliant with the content security policy
 */
export function withContentSecurityPolicy() {
    return createFeature(0 /* NgIconFeatureKind.ContentSecurityPolicyFeature */, [
        { provide: NgIconPreProcessorToken, useValue: preprocessIcon },
        { provide: NgIconPostProcessorToken, useValue: postprocessIcon },
    ]);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3NwLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vcGFja2FnZXMvY29yZS9zcmMvbGliL3Byb3ZpZGVycy9mZWF0dXJlcy9jc3AudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDdkQsT0FBTyxFQUdMLGFBQWEsR0FDZCxNQUFNLFlBQVksQ0FBQztBQUtwQixNQUFNLENBQUMsTUFBTSx1QkFBdUIsR0FBRyxJQUFJLGNBQWMsQ0FDdkQsdUJBQXVCLENBQ3hCLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSx3QkFBd0IsR0FBRyxJQUFJLGNBQWMsQ0FDeEQsd0JBQXdCLENBQ3pCLENBQUM7QUFFRixNQUFNLFVBQVUsd0JBQXdCO0lBQ3RDLE9BQU8sTUFBTSxDQUFDLHVCQUF1QixFQUFFLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDO0FBQy9FLENBQUM7QUFFRCxNQUFNLFVBQVUseUJBQXlCO0lBQ3ZDLE9BQU8sTUFBTSxDQUFDLHdCQUF3QixFQUFFLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsR0FBRSxDQUFDLENBQUMsQ0FBQztBQUM1RSxDQUFDO0FBRUQsU0FBUyxjQUFjLENBQUMsSUFBWTtJQUNsQyw4RUFBOEU7SUFDOUUsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLFlBQVksRUFBRSxhQUFhLENBQUMsQ0FBQztBQUNuRCxDQUFDO0FBRUQsU0FBUyxlQUFlLENBQUMsT0FBaUM7SUFDeEQsMkVBQTJFO0lBQzNFLDZGQUE2RjtJQUM3RixNQUFNLFFBQVEsR0FBRyxPQUFPLENBQUMsZ0JBQWdCLENBQ3ZDLGNBQWMsQ0FDZixDQUFDO0lBRUYsS0FBSyxNQUFNLE9BQU8sSUFBSSxLQUFLLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUM7UUFDM0MsTUFBTSxNQUFNLEdBQUcsT0FBTyxDQUFDLFlBQVksQ0FBQyxZQUFZLENBQUMsQ0FBQztRQUVsRCxNQUFNLEVBQUUsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsRUFBRTtZQUNqQyxNQUFNLENBQUMsUUFBUSxFQUFFLEtBQUssQ0FBQyxHQUFHLEtBQUssQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDM0MsT0FBTyxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsSUFBSSxFQUFTLENBQUMsR0FBRyxLQUFLLENBQUMsSUFBSSxFQUFFLENBQUM7UUFDdkQsQ0FBQyxDQUFDLENBQUM7UUFFSCxPQUFPLENBQUMsZUFBZSxDQUFDLFlBQVksQ0FBQyxDQUFDO0lBQ3hDLENBQUM7QUFDSCxDQUFDO0FBRUQ7O0dBRUc7QUFDSCxNQUFNLFVBQVUseUJBQXlCO0lBQ3ZDLE9BQU8sYUFBYSx5REFBaUQ7UUFDbkUsRUFBRSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsUUFBUSxFQUFFLGNBQWMsRUFBRTtRQUM5RCxFQUFFLE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxRQUFRLEVBQUUsZUFBZSxFQUFFO0tBQ2pFLENBQUMsQ0FBQztBQUNMLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3Rpb25Ub2tlbiwgaW5qZWN0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1xuICBDb250ZW50U2VjdXJpdHlQb2xpY3lGZWF0dXJlLFxuICBOZ0ljb25GZWF0dXJlS2luZCxcbiAgY3JlYXRlRmVhdHVyZSxcbn0gZnJvbSAnLi9mZWF0dXJlcyc7XG5cbmV4cG9ydCB0eXBlIE5nSWNvblByZVByb2Nlc3NvciA9IChpY29uOiBzdHJpbmcpID0+IHN0cmluZztcbmV4cG9ydCB0eXBlIE5nSWNvblBvc3RQcm9jZXNzb3IgPSAoZWxlbWVudDogSFRNTEVsZW1lbnQgfCBTVkdFbGVtZW50KSA9PiB2b2lkO1xuXG5leHBvcnQgY29uc3QgTmdJY29uUHJlUHJvY2Vzc29yVG9rZW4gPSBuZXcgSW5qZWN0aW9uVG9rZW48TmdJY29uUHJlUHJvY2Vzc29yPihcbiAgJ05nIEljb24gUHJlIFByb2Nlc3NvcicsXG4pO1xuXG5leHBvcnQgY29uc3QgTmdJY29uUG9zdFByb2Nlc3NvclRva2VuID0gbmV3IEluamVjdGlvblRva2VuPE5nSWNvblBvc3RQcm9jZXNzb3I+KFxuICAnTmcgSWNvbiBQb3N0IFByb2Nlc3NvcicsXG4pO1xuXG5leHBvcnQgZnVuY3Rpb24gaW5qZWN0TmdJY29uUHJlUHJvY2Vzc29yKCk6IE5nSWNvblByZVByb2Nlc3NvciB7XG4gIHJldHVybiBpbmplY3QoTmdJY29uUHJlUHJvY2Vzc29yVG9rZW4sIHsgb3B0aW9uYWw6IHRydWUgfSkgPz8gKGljb24gPT4gaWNvbik7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpbmplY3ROZ0ljb25Qb3N0UHJvY2Vzc29yKCk6IE5nSWNvblBvc3RQcm9jZXNzb3Ige1xuICByZXR1cm4gaW5qZWN0KE5nSWNvblBvc3RQcm9jZXNzb3JUb2tlbiwgeyBvcHRpb25hbDogdHJ1ZSB9KSA/PyAoKCkgPT4ge30pO1xufVxuXG5mdW5jdGlvbiBwcmVwcm9jZXNzSWNvbihpY29uOiBzdHJpbmcpOiBzdHJpbmcge1xuICAvLyByZW5hbWUgYWxsIHN0eWxlIGF0dHJpYnV0ZXMgdG8gZGF0YS1zdHlsZSB0byBhdm9pZCBiZWluZyBibG9ja2VkIGJ5IHRoZSBDU1BcbiAgcmV0dXJuIGljb24ucmVwbGFjZSgvc3R5bGVcXHMqPS9nLCAnZGF0YS1zdHlsZT0nKTtcbn1cblxuZnVuY3Rpb24gcG9zdHByb2Nlc3NJY29uKGVsZW1lbnQ6IEhUTUxFbGVtZW50IHwgU1ZHRWxlbWVudCk6IHZvaWQge1xuICAvLyBmaW5kIGFsbCBlbGVtZW50cyB3aXRoIGEgZGF0YS1zdHlsZSBhdHRyaWJ1dGUgYW5kIGdldCB0aGUgc3R5bGVzIGZyb20gaXRcbiAgLy8gYW5kIGFwcGx5IHRoZW0gdG8gdGhlIGVsZW1lbnQgdXNpbmcgdGhlIHN0eWxlIHByb3BlcnR5IGFuZCByZW1vdmUgdGhlIGRhdGEtc3R5bGUgYXR0cmlidXRlXG4gIGNvbnN0IGVsZW1lbnRzID0gZWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsPEhUTUxFbGVtZW50IHwgU1ZHRWxlbWVudD4oXG4gICAgJ1tkYXRhLXN0eWxlXScsXG4gICk7XG5cbiAgZm9yIChjb25zdCBlbGVtZW50IG9mIEFycmF5LmZyb20oZWxlbWVudHMpKSB7XG4gICAgY29uc3Qgc3R5bGVzID0gZWxlbWVudC5nZXRBdHRyaWJ1dGUoJ2RhdGEtc3R5bGUnKTtcblxuICAgIHN0eWxlcz8uc3BsaXQoJzsnKS5mb3JFYWNoKHN0eWxlID0+IHtcbiAgICAgIGNvbnN0IFtwcm9wZXJ0eSwgdmFsdWVdID0gc3R5bGUuc3BsaXQoJzonKTtcbiAgICAgIGVsZW1lbnQuc3R5bGVbcHJvcGVydHkudHJpbSgpIGFzIGFueV0gPSB2YWx1ZS50cmltKCk7XG4gICAgfSk7XG5cbiAgICBlbGVtZW50LnJlbW92ZUF0dHJpYnV0ZSgnZGF0YS1zdHlsZScpO1xuICB9XG59XG5cbi8qKlxuICogUHJvY2VzcyBpY29ucyBpbiBhIHdheSB0aGF0IGlzIGNvbXBsaWFudCB3aXRoIHRoZSBjb250ZW50IHNlY3VyaXR5IHBvbGljeVxuICovXG5leHBvcnQgZnVuY3Rpb24gd2l0aENvbnRlbnRTZWN1cml0eVBvbGljeSgpOiBDb250ZW50U2VjdXJpdHlQb2xpY3lGZWF0dXJlIHtcbiAgcmV0dXJuIGNyZWF0ZUZlYXR1cmUoTmdJY29uRmVhdHVyZUtpbmQuQ29udGVudFNlY3VyaXR5UG9saWN5RmVhdHVyZSwgW1xuICAgIHsgcHJvdmlkZTogTmdJY29uUHJlUHJvY2Vzc29yVG9rZW4sIHVzZVZhbHVlOiBwcmVwcm9jZXNzSWNvbiB9LFxuICAgIHsgcHJvdmlkZTogTmdJY29uUG9zdFByb2Nlc3NvclRva2VuLCB1c2VWYWx1ZTogcG9zdHByb2Nlc3NJY29uIH0sXG4gIF0pO1xufVxuIl19