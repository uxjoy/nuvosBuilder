import * as i0 from '@angular/core';
import { Directive, ViewEncapsulation, ChangeDetectionStrategy, Component, input, effect, untracked, forwardRef, NgModule } from '@angular/core';
import { provideExposesStateProviderExisting, provideCustomClassSettableExisting } from '@spartan-ng/brain/core';
import { BrnDialogContentDirective, BrnDialogDescriptionDirective, BrnDialogOverlayComponent, BrnDialogTitleDirective, BrnDialogTriggerDirective, BrnDialogComponent, provideBrnDialogDefaultOptions } from '@spartan-ng/brain/dialog';

class BrnAlertDialogContentDirective extends BrnDialogContentDirective {
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "19.2.8", ngImport: i0, type: BrnAlertDialogContentDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
    /** @nocollapse */ static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "19.2.8", type: BrnAlertDialogContentDirective, isStandalone: true, selector: "[brnAlertDialogContent]", providers: [provideExposesStateProviderExisting((() => BrnAlertDialogContentDirective))], usesInheritance: true, ngImport: i0 });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "19.2.8", ngImport: i0, type: BrnAlertDialogContentDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[brnAlertDialogContent]',
                    standalone: true,
                    providers: [provideExposesStateProviderExisting((() => BrnAlertDialogContentDirective))],
                }]
        }] });

class BrnAlertDialogDescriptionDirective extends BrnDialogDescriptionDirective {
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "19.2.8", ngImport: i0, type: BrnAlertDialogDescriptionDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
    /** @nocollapse */ static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "19.2.8", type: BrnAlertDialogDescriptionDirective, isStandalone: true, selector: "[brnAlertDialogDescription]", host: { properties: { "id": "_id()" } }, usesInheritance: true, ngImport: i0 });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "19.2.8", ngImport: i0, type: BrnAlertDialogDescriptionDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[brnAlertDialogDescription]',
                    standalone: true,
                    host: {
                        '[id]': '_id()',
                    },
                }]
        }] });

class BrnAlertDialogOverlayComponent extends BrnDialogOverlayComponent {
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "19.2.8", ngImport: i0, type: BrnAlertDialogOverlayComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "19.2.8", type: BrnAlertDialogOverlayComponent, isStandalone: true, selector: "brn-alert-dialog-overlay", providers: [provideCustomClassSettableExisting((() => BrnAlertDialogOverlayComponent))], usesInheritance: true, ngImport: i0, template: '', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "19.2.8", ngImport: i0, type: BrnAlertDialogOverlayComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'brn-alert-dialog-overlay',
                    standalone: true,
                    providers: [provideCustomClassSettableExisting((() => BrnAlertDialogOverlayComponent))],
                    template: '',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    encapsulation: ViewEncapsulation.None,
                }]
        }] });

class BrnAlertDialogTitleDirective extends BrnDialogTitleDirective {
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "19.2.8", ngImport: i0, type: BrnAlertDialogTitleDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
    /** @nocollapse */ static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "19.2.8", type: BrnAlertDialogTitleDirective, isStandalone: true, selector: "[brnAlertDialogTitle]", host: { properties: { "id": "_id()" } }, usesInheritance: true, ngImport: i0 });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "19.2.8", ngImport: i0, type: BrnAlertDialogTitleDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[brnAlertDialogTitle]',
                    standalone: true,
                    host: {
                        '[id]': '_id()',
                    },
                }]
        }] });

class BrnAlertDialogTriggerDirective extends BrnDialogTriggerDirective {
    brnAlertDialogTriggerFor = input();
    constructor() {
        super();
        effect(() => {
            const brnDialog = this.brnAlertDialogTriggerFor();
            untracked(() => {
                if (brnDialog) {
                    this.mutableBrnDialogTriggerFor().set(brnDialog);
                }
            });
        });
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "19.2.8", ngImport: i0, type: BrnAlertDialogTriggerDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });
    /** @nocollapse */ static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "17.1.0", version: "19.2.8", type: BrnAlertDialogTriggerDirective, isStandalone: true, selector: "button[brnAlertDialogTrigger],button[brnAlertDialogTriggerFor]", inputs: { brnAlertDialogTriggerFor: { classPropertyName: "brnAlertDialogTriggerFor", publicName: "brnAlertDialogTriggerFor", isSignal: true, isRequired: false, transformFunction: null } }, host: { attributes: { "aria-haspopup": "dialog" }, properties: { "id": "id()", "attr.aria-expanded": "state() === 'open' ? 'true': 'false'", "attr.data-state": "state()", "attr.aria-controls": "dialogId" } }, usesInheritance: true, ngImport: i0 });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "19.2.8", ngImport: i0, type: BrnAlertDialogTriggerDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'button[brnAlertDialogTrigger],button[brnAlertDialogTriggerFor]',
                    standalone: true,
                    host: {
                        '[id]': 'id()',
                        'aria-haspopup': 'dialog',
                        '[attr.aria-expanded]': "state() === 'open' ? 'true': 'false'",
                        '[attr.data-state]': 'state()',
                        '[attr.aria-controls]': 'dialogId',
                    },
                }]
        }], ctorParameters: () => [] });

const BRN_ALERT_DIALOG_DEFAULT_OPTIONS = {
    closeOnBackdropClick: false,
    closeOnOutsidePointerEvents: false,
    role: 'alertdialog',
};
class BrnAlertDialogComponent extends BrnDialogComponent {
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "19.2.8", ngImport: i0, type: BrnAlertDialogComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "19.2.8", type: BrnAlertDialogComponent, isStandalone: true, selector: "brn-alert-dialog", providers: [
            {
                provide: BrnDialogComponent,
                useExisting: forwardRef((() => BrnAlertDialogComponent)),
            },
            provideBrnDialogDefaultOptions(BRN_ALERT_DIALOG_DEFAULT_OPTIONS),
        ], exportAs: ["brnAlertDialog"], usesInheritance: true, ngImport: i0, template: `
		<ng-content />
	`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "19.2.8", ngImport: i0, type: BrnAlertDialogComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'brn-alert-dialog',
                    standalone: true,
                    template: `
		<ng-content />
	`,
                    providers: [
                        {
                            provide: BrnDialogComponent,
                            useExisting: forwardRef((() => BrnAlertDialogComponent)),
                        },
                        provideBrnDialogDefaultOptions(BRN_ALERT_DIALOG_DEFAULT_OPTIONS),
                    ],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    encapsulation: ViewEncapsulation.None,
                    exportAs: 'brnAlertDialog',
                }]
        }] });

const BrnAlertDialogImports = [
    BrnAlertDialogComponent,
    BrnAlertDialogOverlayComponent,
    BrnAlertDialogTriggerDirective,
    BrnAlertDialogContentDirective,
    BrnAlertDialogTitleDirective,
    BrnAlertDialogDescriptionDirective,
];
class BrnAlertDialogModule {
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "19.2.8", ngImport: i0, type: BrnAlertDialogModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
    /** @nocollapse */ static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "19.2.8", ngImport: i0, type: BrnAlertDialogModule, imports: [BrnAlertDialogComponent,
            BrnAlertDialogOverlayComponent,
            BrnAlertDialogTriggerDirective,
            BrnAlertDialogContentDirective,
            BrnAlertDialogTitleDirective,
            BrnAlertDialogDescriptionDirective], exports: [BrnAlertDialogComponent,
            BrnAlertDialogOverlayComponent,
            BrnAlertDialogTriggerDirective,
            BrnAlertDialogContentDirective,
            BrnAlertDialogTitleDirective,
            BrnAlertDialogDescriptionDirective] });
    /** @nocollapse */ static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "19.2.8", ngImport: i0, type: BrnAlertDialogModule });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "19.2.8", ngImport: i0, type: BrnAlertDialogModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [...BrnAlertDialogImports],
                    exports: [...BrnAlertDialogImports],
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { BRN_ALERT_DIALOG_DEFAULT_OPTIONS, BrnAlertDialogComponent, BrnAlertDialogContentDirective, BrnAlertDialogDescriptionDirective, BrnAlertDialogImports, BrnAlertDialogModule, BrnAlertDialogOverlayComponent, BrnAlertDialogTitleDirective, BrnAlertDialogTriggerDirective };
//# sourceMappingURL=spartan-ng-brain-alert-dialog.mjs.map
