import * as i0 from '@angular/core';
import { Directive, input, computed, signal, effect, untracked, forwardRef, ViewEncapsulation, ChangeDetectionStrategy, Component, inject, NgModule } from '@angular/core';
import { BrnDialogCloseDirective, BrnDialogComponent, BrnDialogContentDirective, BrnDialogDescriptionDirective, BrnDialogOverlayComponent, BrnDialogTitleDirective, BrnDialogTriggerDirective } from '@spartan-ng/brain/dialog';
import { provideExposesStateProviderExisting, provideExposedSideProviderExisting, provideCustomClassSettableExisting } from '@spartan-ng/brain/core';

class BrnSheetCloseDirective extends BrnDialogCloseDirective {
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "19.2.8", ngImport: i0, type: BrnSheetCloseDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
    /** @nocollapse */ static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "19.2.8", type: BrnSheetCloseDirective, isStandalone: true, selector: "button[brnSheetClose]", usesInheritance: true, ngImport: i0 });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "19.2.8", ngImport: i0, type: BrnSheetCloseDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'button[brnSheetClose]',
                    standalone: true,
                }]
        }] });

class BrnSheetComponent extends BrnDialogComponent {
    sideInput = input('top', { alias: 'side' });
    sideInputState = computed(() => signal(this.sideInput()));
    side = computed(() => this.sideInputState().asReadonly()());
    constructor() {
        super();
        effect(() => {
            const side = this.side();
            untracked(() => {
                if (side === 'top') {
                    this.mutablePositionStrategy().set(this.positionBuilder.global().top());
                }
                if (side === 'bottom') {
                    this.mutablePositionStrategy().set(this.positionBuilder.global().bottom());
                }
                if (side === 'left') {
                    this.mutablePositionStrategy().set(this.positionBuilder.global().left());
                }
                if (side === 'right') {
                    this.mutablePositionStrategy().set(this.positionBuilder.global().right());
                }
            });
        });
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "19.2.8", ngImport: i0, type: BrnSheetComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.1.0", version: "19.2.8", type: BrnSheetComponent, isStandalone: true, selector: "brn-sheet", inputs: { sideInput: { classPropertyName: "sideInput", publicName: "side", isSignal: true, isRequired: false, transformFunction: null } }, providers: [
            {
                provide: BrnDialogComponent,
                useExisting: forwardRef((() => BrnSheetComponent)),
            },
        ], exportAs: ["brnSheet"], usesInheritance: true, ngImport: i0, template: `
		<ng-content />
	`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "19.2.8", ngImport: i0, type: BrnSheetComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'brn-sheet',
                    standalone: true,
                    template: `
		<ng-content />
	`,
                    providers: [
                        {
                            provide: BrnDialogComponent,
                            useExisting: forwardRef((() => BrnSheetComponent)),
                        },
                    ],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    encapsulation: ViewEncapsulation.None,
                    exportAs: 'brnSheet',
                }]
        }], ctorParameters: () => [] });

class BrnSheetContentDirective extends BrnDialogContentDirective {
    side = inject(BrnSheetComponent).side;
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "19.2.8", ngImport: i0, type: BrnSheetContentDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
    /** @nocollapse */ static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "19.2.8", type: BrnSheetContentDirective, isStandalone: true, selector: "[brnSheetContent]", providers: [
            provideExposesStateProviderExisting((() => BrnSheetContentDirective)),
            provideExposedSideProviderExisting((() => BrnSheetContentDirective)),
        ], usesInheritance: true, ngImport: i0 });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "19.2.8", ngImport: i0, type: BrnSheetContentDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[brnSheetContent]',
                    standalone: true,
                    providers: [
                        provideExposesStateProviderExisting((() => BrnSheetContentDirective)),
                        provideExposedSideProviderExisting((() => BrnSheetContentDirective)),
                    ],
                }]
        }] });

class BrnSheetDescriptionDirective extends BrnDialogDescriptionDirective {
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "19.2.8", ngImport: i0, type: BrnSheetDescriptionDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
    /** @nocollapse */ static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "19.2.8", type: BrnSheetDescriptionDirective, isStandalone: true, selector: "[brnSheetDescription]", host: { properties: { "id": "_id()" } }, usesInheritance: true, ngImport: i0 });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "19.2.8", ngImport: i0, type: BrnSheetDescriptionDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[brnSheetDescription]',
                    standalone: true,
                    host: {
                        '[id]': '_id()',
                    },
                }]
        }] });

class BrnSheetOverlayComponent extends BrnDialogOverlayComponent {
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "19.2.8", ngImport: i0, type: BrnSheetOverlayComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "19.2.8", type: BrnSheetOverlayComponent, isStandalone: true, selector: "brn-sheet-overlay", providers: [provideCustomClassSettableExisting((() => BrnSheetOverlayComponent))], usesInheritance: true, ngImport: i0, template: '', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "19.2.8", ngImport: i0, type: BrnSheetOverlayComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'brn-sheet-overlay',
                    standalone: true,
                    providers: [provideCustomClassSettableExisting((() => BrnSheetOverlayComponent))],
                    template: '',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    encapsulation: ViewEncapsulation.None,
                }]
        }] });

class BrnSheetTitleDirective extends BrnDialogTitleDirective {
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "19.2.8", ngImport: i0, type: BrnSheetTitleDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
    /** @nocollapse */ static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "19.2.8", type: BrnSheetTitleDirective, isStandalone: true, selector: "[brnSheetTitle]", host: { properties: { "id": "_id()" } }, usesInheritance: true, ngImport: i0 });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "19.2.8", ngImport: i0, type: BrnSheetTitleDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[brnSheetTitle]',
                    standalone: true,
                    host: {
                        '[id]': '_id()',
                    },
                }]
        }] });

class BrnSheetTriggerDirective extends BrnDialogTriggerDirective {
    _sheet = inject(BrnSheetComponent, { optional: true });
    side = input(undefined);
    open() {
        const side = this.side();
        if (this._sheet && side) {
            this._sheet.sideInputState().set(side);
        }
        super.open();
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "19.2.8", ngImport: i0, type: BrnSheetTriggerDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
    /** @nocollapse */ static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "17.1.0", version: "19.2.8", type: BrnSheetTriggerDirective, isStandalone: true, selector: "button[brnSheetTrigger]", inputs: { side: { classPropertyName: "side", publicName: "side", isSignal: true, isRequired: false, transformFunction: null } }, usesInheritance: true, ngImport: i0 });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "19.2.8", ngImport: i0, type: BrnSheetTriggerDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'button[brnSheetTrigger]',
                    standalone: true,
                }]
        }] });

const BrnSheetImports = [
    BrnSheetComponent,
    BrnSheetOverlayComponent,
    BrnSheetTriggerDirective,
    BrnSheetCloseDirective,
    BrnSheetContentDirective,
    BrnSheetTitleDirective,
    BrnSheetDescriptionDirective,
];
class BrnSheetModule {
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "19.2.8", ngImport: i0, type: BrnSheetModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
    /** @nocollapse */ static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "19.2.8", ngImport: i0, type: BrnSheetModule, imports: [BrnSheetComponent,
            BrnSheetOverlayComponent,
            BrnSheetTriggerDirective,
            BrnSheetCloseDirective,
            BrnSheetContentDirective,
            BrnSheetTitleDirective,
            BrnSheetDescriptionDirective], exports: [BrnSheetComponent,
            BrnSheetOverlayComponent,
            BrnSheetTriggerDirective,
            BrnSheetCloseDirective,
            BrnSheetContentDirective,
            BrnSheetTitleDirective,
            BrnSheetDescriptionDirective] });
    /** @nocollapse */ static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "19.2.8", ngImport: i0, type: BrnSheetModule });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "19.2.8", ngImport: i0, type: BrnSheetModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [...BrnSheetImports],
                    exports: [...BrnSheetImports],
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { BrnSheetCloseDirective, BrnSheetComponent, BrnSheetContentDirective, BrnSheetDescriptionDirective, BrnSheetImports, BrnSheetModule, BrnSheetOverlayComponent, BrnSheetTitleDirective, BrnSheetTriggerDirective };
//# sourceMappingURL=spartan-ng-brain-sheet.mjs.map
