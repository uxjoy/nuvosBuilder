{"version":3,"file":"spartan-ng-brain-progress.mjs","sources":["../../../../libs/brain/progress/src/lib/brn-progress.token.ts","../../../../libs/brain/progress/src/lib/brn-progress-indicator.component.ts","../../../../libs/brain/progress/src/lib/brn-progress.component.ts","../../../../libs/brain/progress/src/index.ts","../../../../libs/brain/progress/src/spartan-ng-brain-progress.ts"],"sourcesContent":["import { ExistingProvider, InjectionToken, Type, inject } from '@angular/core';\nimport type { BrnProgressComponent } from './brn-progress.component';\n\nconst BrnProgressToken = new InjectionToken<BrnProgressComponent>('BrnProgressComponent');\n\nexport function provideBrnProgress(progress: Type<BrnProgressComponent>): ExistingProvider {\n\treturn { provide: BrnProgressToken, useExisting: progress };\n}\n\nexport function injectBrnProgress(): BrnProgressComponent {\n\treturn inject(BrnProgressToken);\n}\n","import { Component } from '@angular/core';\nimport { injectBrnProgress } from './brn-progress.token';\n\n@Component({\n\tselector: 'brn-progress-indicator',\n\tstandalone: true,\n\ttemplate: '',\n\thost: {\n\t\t'[attr.data-state]': 'progress.state()',\n\t\t'[attr.data-value]': 'progress.value()',\n\t\t'[attr.data-max]': 'progress.max()',\n\t},\n})\nexport class BrnProgressIndicatorComponent {\n\tprotected readonly progress = injectBrnProgress();\n}\n","import { type NumberInput } from '@angular/cdk/coercion';\nimport { Component, OnChanges, SimpleChanges, computed, input, numberAttribute } from '@angular/core';\nimport { provideBrnProgress } from './brn-progress.token';\n\n@Component({\n\tselector: 'brn-progress',\n\tstandalone: true,\n\ttemplate: '<ng-content/>',\n\texportAs: 'brnProgress',\n\tproviders: [provideBrnProgress(BrnProgressComponent)],\n\thost: {\n\t\trole: 'progressbar',\n\t\t'[attr.aria-valuemax]': 'max()',\n\t\t'[attr.aria-valuemin]': '0',\n\t\t'[attr.aria-valuenow]': 'value()',\n\t\t'[attr.aria-valuetext]': 'label()',\n\t\t'[attr.data-state]': 'state()',\n\t\t'[attr.data-value]': 'value()',\n\t\t'[attr.data-max]': 'max()',\n\t},\n})\nexport class BrnProgressComponent implements OnChanges {\n\tpublic readonly value = input<number | null | undefined, NumberInput>(undefined, {\n\t\ttransform: (value) => (value === undefined || value === null ? undefined : Number(value)),\n\t});\n\tpublic readonly max = input<number, NumberInput>(100, { transform: numberAttribute });\n\tpublic readonly getValueLabel = input<BrnProgressLabelFn>((value, max) => `${Math.round((value / max) * 100)}%`);\n\tprotected readonly label = computed(() => {\n\t\tconst value = this.value();\n\t\treturn value === null || value === undefined ? undefined : this.getValueLabel()(value, this.max());\n\t});\n\n\tprotected readonly state = computed(() => {\n\t\tconst value = this.value();\n\t\tconst max = this.max();\n\n\t\treturn value === null || value === undefined ? 'indeterminate' : value === max ? 'complete' : 'loading';\n\t});\n\n\tngOnChanges(changes: SimpleChanges): void {\n\t\tif ('value' in changes || 'max' in changes) {\n\t\t\tthis.validate();\n\t\t}\n\t}\n\n\tprivate validate(): void {\n\t\t// validate that the value is within the bounds of the max\n\t\tconst value = this.value();\n\t\tconst max = this.max();\n\n\t\tif (value === null || value === undefined) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (value > max || value < 0) {\n\t\t\tthrow Error('Value must be 0 or greater and less or equal to max');\n\t\t}\n\n\t\tif (max < 0) {\n\t\t\tthrow Error('max must be greater than 0');\n\t\t}\n\t}\n}\n\nexport type BrnProgressLabelFn = (value: number, max: number) => string;\n","import { NgModule } from '@angular/core';\n\nimport { BrnProgressIndicatorComponent } from './lib/brn-progress-indicator.component';\nimport { BrnProgressComponent } from './lib/brn-progress.component';\nexport { injectBrnProgress } from './lib/brn-progress.token';\n\nexport * from './lib/brn-progress-indicator.component';\nexport * from './lib/brn-progress.component';\n\nexport const BrnProgressImports = [BrnProgressComponent, BrnProgressIndicatorComponent] as const;\n\n@NgModule({\n\timports: [...BrnProgressImports],\n\texports: [...BrnProgressImports],\n})\nexport class BrnProgressModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}