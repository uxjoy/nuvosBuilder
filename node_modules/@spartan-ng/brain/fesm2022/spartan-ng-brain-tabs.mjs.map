{"version":3,"file":"spartan-ng-brain-tabs.mjs","sources":["../../../../libs/brain/tabs/src/lib/brn-tabs-trigger.directive.ts","../../../../libs/brain/tabs/src/lib/brn-tabs-list.directive.ts","../../../../libs/brain/tabs/src/lib/brn-tabs-paginated-list.directive.ts","../../../../libs/brain/tabs/src/index.ts","../../../../libs/brain/tabs/src/spartan-ng-brain-tabs.ts"],"sourcesContent":["import {\n\tDirective,\n\tElementRef,\n\tInput,\n\tcomputed,\n\teffect,\n\tinject,\n\tinput,\n\tmodel,\n\toutput,\n\tsignal,\n\tuntracked,\n} from '@angular/core';\n\n@Directive({\n\tselector: '[brnTabsContent]',\n\tstandalone: true,\n\thost: {\n\t\trole: 'tabpanel',\n\t\ttabindex: '0',\n\t\t'[id]': 'contentId()',\n\t\t'[attr.aria-labelledby]': 'labelId()',\n\t\t'[hidden]': '_isSelected() === false',\n\t},\n\texportAs: 'brnTabsContent',\n})\nexport class BrnTabsContentDirective {\n\tprivate readonly _root = inject(BrnTabsDirective);\n\tprivate readonly _elementRef = inject(ElementRef);\n\n\tpublic readonly contentFor = input.required<string>({ alias: 'brnTabsContent' });\n\tprotected readonly _isSelected = computed(() => this._root.$activeTab() === this.contentFor());\n\tprotected contentId = computed(() => `brn-tabs-content-${this.contentFor()}`);\n\tprotected labelId = computed(() => `brn-tabs-label-${this.contentFor()}`);\n\n\tconstructor() {\n\t\teffect(() => {\n\t\t\tconst contentFor = this.contentFor();\n\t\t\tuntracked(() => this._root.registerContent(contentFor, this));\n\t\t});\n\t}\n\n\tpublic focus() {\n\t\tthis._elementRef.nativeElement.focus();\n\t}\n}\n\nexport type BrnTabsOrientation = 'horizontal' | 'vertical';\nexport type BrnTabsDirection = 'ltr' | 'rtl';\nexport type BrnActivationMode = 'automatic' | 'manual';\n\n@Directive({\n\tselector: '[brnTabs]',\n\tstandalone: true,\n\thost: {\n\t\t'[attr.data-orientation]': 'orientation()',\n\t\t'[attr.dir]': 'direction()',\n\t},\n\texportAs: 'brnTabs',\n})\nexport class BrnTabsDirective {\n\tpublic readonly orientation = input<BrnTabsOrientation>('horizontal');\n\t/** internal **/\n\tpublic $orientation = this.orientation;\n\n\tpublic readonly direction = input<BrnTabsDirection>('ltr');\n\t/** internal **/\n\tpublic $direction = this.direction;\n\n\tpublic readonly _activeTab = model<string | undefined>(undefined, { alias: 'brnTabs' });\n\t/** internal **/\n\tpublic $activeTab = this._activeTab.asReadonly();\n\n\tpublic readonly activationMode = input<BrnActivationMode>('automatic');\n\t/** internal **/\n\tpublic $activationMode = this.activationMode;\n\n\tpublic readonly tabActivated = output<string>();\n\n\tprivate readonly _tabs = signal<{\n\t\t[key: string]: { trigger: BrnTabsTriggerDirective; content: BrnTabsContentDirective };\n\t}>({});\n\tpublic readonly $tabs = this._tabs.asReadonly();\n\n\tpublic registerTrigger(key: string, trigger: BrnTabsTriggerDirective) {\n\t\tthis._tabs.update((tabs) => ({ ...tabs, [key]: { trigger, content: tabs[key]?.content } }));\n\t}\n\n\tpublic registerContent(key: string, content: BrnTabsContentDirective) {\n\t\tthis._tabs.update((tabs) => ({ ...tabs, [key]: { trigger: tabs[key]?.trigger, content } }));\n\t}\n\n\temitTabActivated(key: string) {\n\t\tthis.tabActivated.emit(key);\n\t}\n\n\tsetActiveTab(key: string) {\n\t\tthis._activeTab.set(key);\n\t}\n}\n\n@Directive({\n\tselector: 'button[brnTabsTrigger]',\n\tstandalone: true,\n\thost: {\n\t\t'[id]': 'labelId()',\n\t\ttype: 'button',\n\t\trole: 'tab',\n\t\t'[tabindex]': 'selected() ? \"0\": \"-1\"',\n\t\t'[attr.aria-selected]': 'selected()',\n\t\t'[attr.aria-controls]': 'contentId()',\n\t\t'[attr.data-state]': \"selected() ? 'active' : 'inactive'\",\n\t\t'[attr.data-orientation]': '_orientation()',\n\t\t'[attr.data-disabled]': \"disabled ? '' : undefined\",\n\t\t'(click)': 'activate()',\n\t},\n\texportAs: 'brnTabsTrigger',\n})\nexport class BrnTabsTriggerDirective {\n\tpublic readonly elementRef = inject(ElementRef);\n\n\tprivate readonly _root = inject(BrnTabsDirective);\n\n\tprotected readonly _orientation = this._root.$orientation;\n\n\tpublic readonly triggerFor = input.required<string>({ alias: 'brnTabsTrigger' });\n\tpublic readonly selected = computed(() => this._root.$activeTab() === this.triggerFor());\n\tprotected readonly contentId = computed(() => `brn-tabs-content-${this.triggerFor()}`);\n\tprotected readonly labelId = computed(() => `brn-tabs-label-${this.triggerFor()}`);\n\n\t// leaving this as an @input to be compatible with the `FocusKeyManager` used in the `BrnTabsListDirective`\n\t@Input()\n\tpublic disabled = false;\n\n\tconstructor() {\n\t\teffect(() => {\n\t\t\tconst triggerFor = this.triggerFor();\n\t\t\tuntracked(() => this._root.registerTrigger(triggerFor, this));\n\t\t});\n\t}\n\n\tpublic focus() {\n\t\tthis.elementRef.nativeElement.focus();\n\t\tif (this._root.$activationMode() === 'automatic') {\n\t\t\tthis.activate();\n\t\t}\n\t}\n\n\tpublic activate() {\n\t\tif (!this.triggerFor()) return;\n\t\tthis._root.setActiveTab(this.triggerFor());\n\t\tthis._root.emitTabActivated(this.triggerFor());\n\t}\n\n\tpublic get key(): string | undefined {\n\t\treturn this.triggerFor();\n\t}\n}\n","import { FocusKeyManager } from '@angular/cdk/a11y';\nimport { type AfterContentInit, Directive, ElementRef, contentChildren, inject } from '@angular/core';\nimport { fromEvent } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { BrnTabsDirective, BrnTabsTriggerDirective } from './brn-tabs-trigger.directive';\n\n@Directive({\n\tselector: '[brnTabsList]',\n\tstandalone: true,\n\thost: {\n\t\trole: 'tablist',\n\t\t'[attr.aria-orientation]': '_orientation()',\n\t\t'[attr.data-orientation]': '_orientation()',\n\t},\n\texportAs: 'brnTabsList',\n})\nexport class BrnTabsListDirective implements AfterContentInit {\n\tprivate readonly _root = inject(BrnTabsDirective);\n\n\tprotected readonly _orientation = this._root.$orientation;\n\tprivate readonly _direction = this._root.$direction;\n\tprivate readonly _activeTab = this._root.$activeTab;\n\tprivate readonly _tabs = this._root.$tabs;\n\tprivate readonly _elementRef = inject<ElementRef<HTMLElement>>(ElementRef);\n\tprivate readonly _keyDownListener = fromEvent(this._elementRef.nativeElement, 'keydown');\n\n\tprivate _keyManager?: FocusKeyManager<BrnTabsTriggerDirective>;\n\n\tpublic triggers = contentChildren(BrnTabsTriggerDirective, { descendants: true });\n\n\tpublic ngAfterContentInit() {\n\t\tthis._keyManager = new FocusKeyManager<BrnTabsTriggerDirective>(this.triggers())\n\t\t\t.withHorizontalOrientation(this._direction())\n\t\t\t.withHomeAndEnd()\n\t\t\t.withPageUpDown()\n\t\t\t.withWrap();\n\n\t\t// needed because by default the index is set to -1, which means first interaction is skipped\n\t\tthis._keyDownListener.pipe(take(1)).subscribe(() => {\n\t\t\tconst currentTabKey = this._activeTab();\n\t\t\tconst tabs = this._tabs();\n\t\t\tlet activeIndex = 0;\n\t\t\tif (currentTabKey) {\n\t\t\t\tconst currentTab = tabs[currentTabKey];\n\t\t\t\tif (currentTab) {\n\t\t\t\t\tactiveIndex = this.triggers().indexOf(currentTab.trigger);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._keyManager?.setActiveItem(activeIndex);\n\t\t});\n\n\t\tthis._keyDownListener.subscribe((event) => {\n\t\t\tif ('key' in event) {\n\t\t\t\tif (this._orientation() === 'horizontal') {\n\t\t\t\t\tif (event.key === 'ArrowUp' || event.key === 'ArrowDown') return;\n\t\t\t\t}\n\t\t\t\tif (this._orientation() === 'vertical') {\n\t\t\t\t\tif (event.key === 'ArrowLeft' || event.key === 'ArrowRight') return;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._keyManager?.onKeydown(event as KeyboardEvent);\n\t\t});\n\t}\n}\n","/**\n * We are building on shoulders of giants here and adapt the implementation provided by the incredible Angular\n * team: https://github.com/angular/components/blob/main/src/material/tabs/paginated-tab-header.ts\n * Check them out! Give them a try! Leave a star! Their work is incredible!\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { FocusKeyManager, type FocusableOption } from '@angular/cdk/a11y';\nimport { type Direction, Directionality } from '@angular/cdk/bidi';\nimport { ENTER, SPACE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { SharedResizeObserver } from '@angular/cdk/observers/private';\nimport { Platform, normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport {\n\tANIMATION_MODULE_TYPE,\n\ttype AfterContentChecked,\n\ttype AfterContentInit,\n\ttype AfterViewInit,\n\tChangeDetectorRef,\n\tDirective,\n\tElementRef,\n\tInjector,\n\tNgZone,\n\ttype OnDestroy,\n\tSignal,\n\tafterNextRender,\n\tbooleanAttribute,\n\tcomputed,\n\teffect,\n\tinject,\n\tinput,\n\toutput,\n\tsignal,\n} from '@angular/core';\nimport { EMPTY, Observable, type Observer, Subject, fromEvent, merge, of as observableOf, timer } from 'rxjs';\nimport { debounceTime, filter, skip, startWith, switchMap, takeUntil } from 'rxjs/operators';\nimport { BrnTabsDirective } from './brn-tabs-trigger.directive';\n\n/** Config used to bind passive event listeners */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({\n\tpassive: true,\n}) as EventListenerOptions;\n\n/**\n * The directions that scrolling can go in when the header's tabs exceed the header width. 'After'\n * will scroll the header towards the end of the tabs list and 'before' will scroll towards the\n * beginning of the list.\n */\nexport type ScrollDirection = 'after' | 'before';\n\n/**\n * Amount of milliseconds to wait before starting to scroll the header automatically.\n * Set a little conservatively in order to handle fake events dispatched on touch devices.\n */\nconst HEADER_SCROLL_DELAY = 650;\n\n/**\n * Interval in milliseconds at which to scroll the header\n * while the user is holding their pointer.\n */\nconst HEADER_SCROLL_INTERVAL = 100;\n\n/** Item inside a paginated tab header. */\nexport type BrnPaginatedTabHeaderItem = FocusableOption & { elementRef: ElementRef };\n\n/**\n * Base class for a tab header that supported pagination.\n * @docs-private\n */\n@Directive()\nexport abstract class BrnTabsPaginatedListDirective\n\timplements AfterContentChecked, AfterContentInit, AfterViewInit, OnDestroy\n{\n\tpublic abstract _items: Signal<ReadonlyArray<BrnPaginatedTabHeaderItem>>;\n\tpublic abstract _itemsChanges: Observable<ReadonlyArray<BrnPaginatedTabHeaderItem>>;\n\tpublic abstract _tabListContainer: Signal<ElementRef<HTMLElement>>;\n\tpublic abstract _tabList: Signal<ElementRef<HTMLElement>>;\n\tpublic abstract _tabListInner: Signal<ElementRef<HTMLElement>>;\n\tpublic abstract _nextPaginator: Signal<ElementRef<HTMLElement>>;\n\tpublic abstract _previousPaginator: Signal<ElementRef<HTMLElement>>;\n\n\t/** The distance in pixels that the tab labels should be translated to the left. */\n\tprivate _scrollDistance = 0;\n\n\t/** Whether the header should scroll to the selected index after the view has been checked. */\n\tprivate _selectedIndexChanged = false;\n\n\tprivate readonly _root = inject(BrnTabsDirective);\n\tprivate readonly _activeTab = this._root.$activeTab;\n\tprivate readonly _tabs = this._root.$tabs;\n\n\t/** Emits when the component is destroyed. */\n\tprotected readonly _destroyed = new Subject<void>();\n\n\t/** Whether the controls for pagination should be displayed */\n\tpublic _showPaginationControls = signal(false);\n\n\t/** Whether the tab list can be scrolled more towards the end of the tab label list. */\n\tpublic _disableScrollAfter = true;\n\n\t/** Whether the tab list can be scrolled more towards the beginning of the tab label list. */\n\tpublic _disableScrollBefore = true;\n\n\t/**\n\t * The number of tab labels that are displayed on the header. When this changes, the header\n\t * should re-evaluate the scroll position.\n\t */\n\tprivate _tabLabelCount!: number;\n\n\t/** Whether the scroll distance has changed and should be applied after the view is checked. */\n\tprivate _scrollDistanceChanged!: boolean;\n\n\t/** Used to manage focus between the tabs. */\n\tprivate _keyManager!: FocusKeyManager<BrnPaginatedTabHeaderItem>;\n\n\t/** Cached text content of the header. */\n\tprivate _currentTextContent!: string;\n\n\t/** Stream that will stop the automated scrolling. */\n\tprivate readonly _stopScrolling = new Subject<void>();\n\n\t/**\n\t * Whether pagination should be disabled. This can be used to avoid unnecessary\n\t * layout recalculations if it's known that pagination won't be required.\n\t */\n\tpublic disablePagination = input(false, { transform: booleanAttribute });\n\n\t/** The index of the active tab. */\n\tprivate readonly _selectedIndex = computed(() => {\n\t\tconst currentTabKey = this._activeTab();\n\t\tconst tabs = this._tabs();\n\n\t\tlet activeIndex = 0;\n\t\tif (currentTabKey && this._items()) {\n\t\t\tconst currentTab = tabs[currentTabKey];\n\t\t\tif (currentTab) {\n\t\t\t\tactiveIndex = this._items().indexOf(currentTab.trigger);\n\t\t\t}\n\t\t}\n\n\t\treturn activeIndex;\n\t});\n\n\t/** Event emitted when the option is selected. */\n\tpublic readonly selectFocusedIndex = output<number>();\n\n\t/** Event emitted when a label is focused. */\n\tpublic readonly indexFocused = output<number>();\n\n\tprivate readonly _sharedResizeObserver = inject(SharedResizeObserver);\n\n\tprivate readonly _injector = inject(Injector);\n\n\tprotected _elementRef: ElementRef<HTMLElement> = inject(ElementRef);\n\tprotected _changeDetectorRef: ChangeDetectorRef = inject(ChangeDetectorRef);\n\tprivate readonly _viewportRuler: ViewportRuler = inject(ViewportRuler);\n\tprivate readonly _dir = inject(Directionality, { optional: true });\n\tprivate readonly _ngZone: NgZone = inject(NgZone);\n\tprivate readonly _platform: Platform = inject(Platform);\n\tpublic _animationMode = inject(ANIMATION_MODULE_TYPE, { optional: true });\n\n\tconstructor() {\n\t\t// Bind the `mouseleave` event on the outside since it doesn't change anything in the view.\n\t\tthis._ngZone.runOutsideAngular(() => {\n\t\t\tfromEvent(this._elementRef.nativeElement, 'mouseleave')\n\t\t\t\t.pipe(takeUntil(this._destroyed))\n\t\t\t\t.subscribe(() => {\n\t\t\t\t\tthis._stopInterval();\n\t\t\t\t});\n\t\t});\n\n\t\teffect(() => {\n\t\t\tconst selectedIndex = this._selectedIndex();\n\n\t\t\tif (selectedIndex !== 0) {\n\t\t\t\tthis._selectedIndexChanged = true;\n\t\t\t\tif (this._keyManager) {\n\t\t\t\t\tthis._keyManager.updateActiveItem(selectedIndex);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\t/** Called when the user has selected an item via the keyboard. */\n\tprotected abstract _itemSelected(event: KeyboardEvent): void;\n\n\tngAfterViewInit() {\n\t\t// We need to handle these events manually, because we want to bind passive event listeners.\n\t\tfromEvent(this._previousPaginator().nativeElement, 'touchstart', passiveEventListenerOptions)\n\t\t\t.pipe(takeUntil(this._destroyed))\n\t\t\t.subscribe(() => {\n\t\t\t\tthis._handlePaginatorPress('before');\n\t\t\t});\n\n\t\tfromEvent(this._nextPaginator().nativeElement, 'touchstart', passiveEventListenerOptions)\n\t\t\t.pipe(takeUntil(this._destroyed))\n\t\t\t.subscribe(() => {\n\t\t\t\tthis._handlePaginatorPress('after');\n\t\t\t});\n\t}\n\n\tngAfterContentInit() {\n\t\tconst dirChange = this._dir ? this._dir.change : observableOf('ltr');\n\t\t// We need to debounce resize events because the alignment logic is expensive.\n\t\t// If someone animates the width of tabs, we don't want to realign on every animation frame.\n\t\t// Once we haven't seen any more resize events in the last 32ms (~2 animaion frames) we can\n\t\t// re-align.\n\t\tconst resize = this._sharedResizeObserver\n\t\t\t.observe(this._elementRef.nativeElement)\n\t\t\t.pipe(debounceTime(32), takeUntil(this._destroyed));\n\t\t// Note: We do not actually need to watch these events for proper functioning of the tabs,\n\t\t// the resize events above should capture any viewport resize that we care about. However,\n\t\t// removing this is fairly breaking for screenshot tests, so we're leaving it here for now.\n\t\tconst viewportResize = this._viewportRuler.change(150).pipe(takeUntil(this._destroyed));\n\n\t\tconst realign = () => {\n\t\t\tthis.updatePagination();\n\t\t};\n\n\t\tthis._keyManager = new FocusKeyManager<BrnPaginatedTabHeaderItem>(this._items())\n\t\t\t.withHorizontalOrientation(this._getLayoutDirection())\n\t\t\t.withHomeAndEnd()\n\t\t\t.withWrap()\n\t\t\t// Allow focus to land on disabled tabs, as per https://w3c.github.io/aria-practices/#kbd_disabled_controls\n\t\t\t.skipPredicate(() => false);\n\n\t\tthis._keyManager.updateActiveItem(this._selectedIndex());\n\n\t\t// Note: We do not need to realign after the first render for proper functioning of the tabs\n\t\t// the resize events above should fire when we first start observing the element. However,\n\t\t// removing this is fairly breaking for screenshot tests, so we're leaving it here for now.\n\t\tafterNextRender(realign, { injector: this._injector });\n\n\t\t// On dir change or resize, realign the ink bar and update the orientation of\n\t\t// the key manager if the direction has changed.\n\t\tmerge(dirChange, viewportResize, resize, this._itemsChanges, this._itemsResized())\n\t\t\t.pipe(takeUntil(this._destroyed))\n\t\t\t.subscribe(() => {\n\t\t\t\t// We need to defer this to give the browser some time to recalculate\n\t\t\t\t// the element dimensions. The call has to be wrapped in `NgZone.run`,\n\t\t\t\t// because the viewport change handler runs outside of Angular.\n\t\t\t\tthis._ngZone.run(() => {\n\t\t\t\t\tPromise.resolve().then(() => {\n\t\t\t\t\t\t// Clamp the scroll distance, because it can change with the number of tabs.\n\t\t\t\t\t\tthis._scrollDistance = Math.max(0, Math.min(this._getMaxScrollDistance(), this._scrollDistance));\n\t\t\t\t\t\trealign();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\tthis._keyManager.withHorizontalOrientation(this._getLayoutDirection());\n\t\t\t});\n\n\t\t// If there is a change in the focus key manager we need to emit the `indexFocused`\n\t\t// event in order to provide a public event that notifies about focus changes. Also we realign\n\t\t// the tabs container by scrolling the new focused tab into the visible section.\n\t\tthis._keyManager.change.subscribe((newFocusIndex) => {\n\t\t\tthis.indexFocused.emit(newFocusIndex);\n\t\t\tthis._setTabFocus(newFocusIndex);\n\t\t});\n\t}\n\n\t/** Sends any changes that could affect the layout of the items. */\n\tprivate _itemsResized(): Observable<ResizeObserverEntry[]> {\n\t\tif (typeof ResizeObserver !== 'function') {\n\t\t\treturn EMPTY;\n\t\t}\n\n\t\treturn this._itemsChanges.pipe(\n\t\t\tstartWith(this._items()),\n\t\t\tswitchMap(\n\t\t\t\t(tabItems: ReadonlyArray<BrnPaginatedTabHeaderItem>) =>\n\t\t\t\t\tnew Observable((observer: Observer<ResizeObserverEntry[]>) =>\n\t\t\t\t\t\tthis._ngZone.runOutsideAngular(() => {\n\t\t\t\t\t\t\tconst resizeObserver = new ResizeObserver((entries) => observer.next(entries));\n\t\t\t\t\t\t\tfor (const tabItem of tabItems) {\n\t\t\t\t\t\t\t\tresizeObserver.observe(tabItem.elementRef.nativeElement);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn () => {\n\t\t\t\t\t\t\t\tresizeObserver.disconnect();\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}),\n\t\t\t\t\t),\n\t\t\t),\n\t\t\t// Skip the first emit since the resize observer emits when an item\n\t\t\t// is observed for new items when the tab is already inserted\n\t\t\tskip(1),\n\t\t\t// Skip emissions where all the elements are invisible since we don't want\n\t\t\t// the header to try and re-render with invalid measurements. See #25574.\n\t\t\tfilter((entries) => entries.some((e) => e.contentRect.width > 0 && e.contentRect.height > 0)),\n\t\t);\n\t}\n\n\tngAfterContentChecked(): void {\n\t\t// If the number of tab labels have changed, check if scrolling should be enabled\n\t\tif (this._tabLabelCount !== this._items().length) {\n\t\t\tthis.updatePagination();\n\t\t\tthis._tabLabelCount = this._items().length;\n\t\t\tthis._changeDetectorRef.markForCheck();\n\t\t}\n\n\t\t// If the selected index has changed, scroll to the label and check if the scrolling controls\n\t\t// should be disabled.\n\t\tif (this._selectedIndexChanged) {\n\t\t\tthis._scrollToLabel(this._selectedIndex());\n\t\t\tthis._checkScrollingControls();\n\t\t\tthis._selectedIndexChanged = false;\n\t\t\tthis._changeDetectorRef.markForCheck();\n\t\t}\n\n\t\t// If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n\t\t// then translate the header to reflect this.\n\t\tif (this._scrollDistanceChanged) {\n\t\t\tthis._updateTabScrollPosition();\n\t\t\tthis._scrollDistanceChanged = false;\n\t\t\tthis._changeDetectorRef.markForCheck();\n\t\t}\n\t}\n\n\tngOnDestroy() {\n\t\tthis._keyManager?.destroy();\n\t\tthis._destroyed.next();\n\t\tthis._destroyed.complete();\n\t\tthis._stopScrolling.complete();\n\t}\n\n\t/** Handles keyboard events on the header. */\n\t_handleKeydown(event: KeyboardEvent) {\n\t\t// We don't handle any key bindings with a modifier key.\n\t\tif (hasModifierKey(event)) {\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (event.keyCode) {\n\t\t\tcase ENTER:\n\t\t\tcase SPACE:\n\t\t\t\tif (this.focusIndex !== this._selectedIndex()) {\n\t\t\t\t\tconst item = this._items()[this.focusIndex];\n\n\t\t\t\t\tif (item && !item.disabled) {\n\t\t\t\t\t\tthis.selectFocusedIndex.emit(this.focusIndex);\n\t\t\t\t\t\tthis._itemSelected(event);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthis._keyManager.onKeydown(event);\n\t\t}\n\t}\n\n\t/**\n\t * Callback for when the MutationObserver detects that the content has changed.\n\t */\n\t_onContentChanges() {\n\t\tconst textContent = this._elementRef.nativeElement.textContent;\n\n\t\t// We need to diff the text content of the header, because the MutationObserver callback\n\t\t// will fire even if the text content didn't change which is inefficient and is prone\n\t\t// to infinite loops if a poorly constructed expression is passed in (see #14249).\n\t\tif (textContent !== this._currentTextContent) {\n\t\t\tthis._currentTextContent = textContent || '';\n\n\t\t\t// The content observer runs outside the `NgZone` by default, which\n\t\t\t// means that we need to bring the callback back in ourselves.\n\t\t\tthis._ngZone.run(() => {\n\t\t\t\tthis.updatePagination();\n\t\t\t\tthis._changeDetectorRef.markForCheck();\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Updates the view whether pagination should be enabled or not.\n\t *\n\t * WARNING: Calling this method can be very costly in terms of performance. It should be called\n\t * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n\t * page.\n\t */\n\tupdatePagination() {\n\t\tthis._checkPaginationEnabled();\n\t\tthis._checkScrollingControls();\n\t\tthis._updateTabScrollPosition();\n\t}\n\n\t/** Tracks which element has focus; used for keyboard navigation */\n\tpublic get focusIndex(): number {\n\t\treturn this._keyManager ? (this._keyManager.activeItemIndex ?? 0) : 0;\n\t}\n\n\t/** When the focus index is set, we must manually send focus to the correct label */\n\tpublic set focusIndex(value: number) {\n\t\tif (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._keyManager.setActiveItem(value);\n\t}\n\n\t/**\n\t * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n\t * providing a valid index and return true.\n\t */\n\t_isValidIndex(index: number): boolean {\n\t\treturn this._items() ? !!this._items()[index] : true;\n\t}\n\n\t/**\n\t * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n\t * scrolling is enabled.\n\t */\n\t_setTabFocus(tabIndex: number) {\n\t\tif (this._showPaginationControls()) {\n\t\t\tthis._scrollToLabel(tabIndex);\n\t\t}\n\n\t\tif (this._items()?.length) {\n\t\t\tthis._items()[tabIndex].focus();\n\n\t\t\t// Do not let the browser manage scrolling to focus the element, this will be handled\n\t\t\t// by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n\t\t\t// should be the full width minus the offset width.\n\t\t\tconst containerEl = this._tabListContainer().nativeElement;\n\t\t\tconst dir = this._getLayoutDirection();\n\n\t\t\tif (dir === 'ltr') {\n\t\t\t\tcontainerEl.scrollLeft = 0;\n\t\t\t} else {\n\t\t\t\tcontainerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n\t\t\t}\n\t\t}\n\t}\n\n\t/** The layout direction of the containing app. */\n\t_getLayoutDirection(): Direction {\n\t\treturn this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n\t}\n\n\t/** Performs the CSS transformation on the tab list that will cause the list to scroll. */\n\t_updateTabScrollPosition() {\n\t\tif (this.disablePagination()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst scrollDistance = this.scrollDistance;\n\t\tconst translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance;\n\n\t\t// Don't use `translate3d` here because we don't want to create a new layer. A new layer\n\t\t// seems to cause flickering and overflow in Internet Explorer. For example, the ink bar\n\t\t// and ripples will exceed the boundaries of the visible tab bar.\n\t\t// See: https://github.com/angular/components/issues/10276\n\t\t// We round the `transform` here, because transforms with sub-pixel precision cause some\n\t\t// browsers to blur the content of the element.\n\t\tthis._tabList().nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n\n\t\t// Setting the `transform` on IE will change the scroll offset of the parent, causing the\n\t\t// position to be thrown off in some cases. We have to reset it ourselves to ensure that\n\t\t// it doesn't get thrown off. Note that we scope it only to IE and Edge, because messing\n\t\t// with the scroll position throws off Chrome 71+ in RTL mode (see #14689).\n\t\tif (this._platform.TRIDENT || this._platform.EDGE) {\n\t\t\tthis._tabListContainer().nativeElement.scrollLeft = 0;\n\t\t}\n\t}\n\n\t/** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\n\tpublic get scrollDistance(): number {\n\t\treturn this._scrollDistance;\n\t}\n\tpublic set scrollDistance(value: number) {\n\t\tthis._scrollTo(value);\n\t}\n\n\t/**\n\t * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n\t * the end of the list, respectively). The distance to scroll is computed to be a third of the\n\t * length of the tab list view window.\n\t *\n\t * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n\t * should be called sparingly.\n\t */\n\t_scrollHeader(direction: ScrollDirection) {\n\t\tconst viewLength = this._tabListContainer().nativeElement.offsetWidth;\n\n\t\t// Move the scroll distance one-third the length of the tab list's viewport.\n\t\tconst scrollAmount = ((direction === 'before' ? -1 : 1) * viewLength) / 3;\n\n\t\treturn this._scrollTo(this._scrollDistance + scrollAmount);\n\t}\n\n\t/** Handles click events on the pagination arrows. */\n\t_handlePaginatorClick(direction: ScrollDirection) {\n\t\tthis._stopInterval();\n\t\tthis._scrollHeader(direction);\n\t}\n\n\t/**\n\t * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n\t *\n\t * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n\t * should be called sparingly.\n\t */\n\t_scrollToLabel(labelIndex: number) {\n\t\tif (this.disablePagination()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst selectedLabel = this._items() ? this._items()[labelIndex] : null;\n\n\t\tif (!selectedLabel) {\n\t\t\treturn;\n\t\t}\n\n\t\t// The view length is the visible width of the tab labels.\n\t\tconst viewLength = this._tabListContainer().nativeElement.offsetWidth;\n\t\tconst { offsetLeft, offsetWidth } = selectedLabel.elementRef.nativeElement;\n\n\t\tlet labelBeforePos: number;\n\t\tlet labelAfterPos: number;\n\t\tif (this._getLayoutDirection() === 'ltr') {\n\t\t\tlabelBeforePos = offsetLeft;\n\t\t\tlabelAfterPos = labelBeforePos + offsetWidth;\n\t\t} else {\n\t\t\tlabelAfterPos = this._tabListInner().nativeElement.offsetWidth - offsetLeft;\n\t\t\tlabelBeforePos = labelAfterPos - offsetWidth;\n\t\t}\n\n\t\tconst beforeVisiblePos = this.scrollDistance;\n\t\tconst afterVisiblePos = this.scrollDistance + viewLength;\n\n\t\tif (labelBeforePos < beforeVisiblePos) {\n\t\t\t// Scroll header to move label to the before direction\n\t\t\tthis.scrollDistance -= beforeVisiblePos - labelBeforePos;\n\t\t} else if (labelAfterPos > afterVisiblePos) {\n\t\t\t// Scroll header to move label to the after direction\n\t\t\tthis.scrollDistance += Math.min(labelAfterPos - afterVisiblePos, labelBeforePos - beforeVisiblePos);\n\t\t}\n\t}\n\n\t/**\n\t * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n\t * tab list is wider than the size of the header container, then the pagination controls should\n\t * be shown.\n\t *\n\t * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n\t * should be called sparingly.\n\t */\n\t_checkPaginationEnabled() {\n\t\tif (this.disablePagination()) {\n\t\t\tthis._showPaginationControls.set(false);\n\t\t} else {\n\t\t\tconst isEnabled = this._tabListInner().nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n\n\t\t\tif (!isEnabled) {\n\t\t\t\tthis.scrollDistance = 0;\n\t\t\t}\n\n\t\t\tif (isEnabled !== this._showPaginationControls()) {\n\t\t\t\tthis._changeDetectorRef.markForCheck();\n\t\t\t}\n\n\t\t\tthis._showPaginationControls.set(isEnabled);\n\t\t}\n\t}\n\n\t/**\n\t * Evaluate whether the before and after controls should be enabled or disabled.\n\t * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n\t * before button. If the header is at the end of the list (scroll distance is equal to the\n\t * maximum distance we can scroll), then disable the after button.\n\t *\n\t * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n\t * should be called sparingly.\n\t */\n\t_checkScrollingControls() {\n\t\tif (this.disablePagination()) {\n\t\t\tthis._disableScrollAfter = this._disableScrollBefore = true;\n\t\t} else {\n\t\t\t// Check if the pagination arrows should be activated.\n\t\t\tthis._disableScrollBefore = this.scrollDistance === 0;\n\t\t\tthis._disableScrollAfter = this.scrollDistance === this._getMaxScrollDistance();\n\t\t\tthis._changeDetectorRef.markForCheck();\n\t\t}\n\t}\n\n\t/**\n\t * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n\t * is equal to the difference in width between the tab list container and tab header container.\n\t *\n\t * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n\t * should be called sparingly.\n\t */\n\t_getMaxScrollDistance(): number {\n\t\tconst lengthOfTabList = this._tabListInner().nativeElement.scrollWidth;\n\t\tconst viewLength = this._tabListContainer().nativeElement.offsetWidth;\n\t\treturn lengthOfTabList - viewLength || 0;\n\t}\n\n\t/** Stops the currently-running paginator interval.  */\n\t_stopInterval() {\n\t\tthis._stopScrolling.next();\n\t}\n\n\t/**\n\t * Handles the user pressing down on one of the paginators.\n\t * Starts scrolling the header after a certain amount of time.\n\t * @param direction In which direction the paginator should be scrolled.\n\t */\n\t_handlePaginatorPress(direction: ScrollDirection, mouseEvent?: MouseEvent) {\n\t\t// Don't start auto scrolling for right mouse button clicks. Note that we shouldn't have to\n\t\t// null check the `button`, but we do it so we don't break tests that use fake events.\n\t\tif (mouseEvent && mouseEvent.button !== null && mouseEvent.button !== 0) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Avoid overlapping timers.\n\t\tthis._stopInterval();\n\n\t\t// Start a timer after the delay and keep firing based on the interval.\n\t\ttimer(HEADER_SCROLL_DELAY, HEADER_SCROLL_INTERVAL)\n\t\t\t// Keep the timer going until something tells it to stop or the component is destroyed.\n\t\t\t.pipe(takeUntil(merge(this._stopScrolling, this._destroyed)))\n\t\t\t.subscribe(() => {\n\t\t\t\tconst { maxScrollDistance, distance } = this._scrollHeader(direction);\n\n\t\t\t\t// Stop the timer if we've reached the start or the end.\n\t\t\t\tif (distance === 0 || distance >= maxScrollDistance) {\n\t\t\t\t\tthis._stopInterval();\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\t/**\n\t * Scrolls the header to a given position.\n\t * @param position Position to which to scroll.\n\t * @returns Information on the current scroll distance and the maximum.\n\t */\n\tprivate _scrollTo(position: number) {\n\t\tif (this.disablePagination()) {\n\t\t\treturn { maxScrollDistance: 0, distance: 0 };\n\t\t}\n\n\t\tconst maxScrollDistance = this._getMaxScrollDistance();\n\t\tthis._scrollDistance = Math.max(0, Math.min(maxScrollDistance, position));\n\n\t\t// Mark that the scroll distance has changed so that after the view is checked, the CSS\n\t\t// transformation can move the header.\n\t\tthis._scrollDistanceChanged = true;\n\t\tthis._checkScrollingControls();\n\n\t\treturn { maxScrollDistance, distance: this._scrollDistance };\n\t}\n}\n","import { NgModule } from '@angular/core';\n\nimport { BrnTabsListDirective } from './lib/brn-tabs-list.directive';\nimport { BrnTabsContentDirective, BrnTabsDirective, BrnTabsTriggerDirective } from './lib/brn-tabs-trigger.directive';\n\nexport * from './lib/brn-tabs-list.directive';\nexport * from './lib/brn-tabs-paginated-list.directive';\nexport * from './lib/brn-tabs-trigger.directive';\n\nexport const BrnTabsImports = [\n\tBrnTabsDirective,\n\tBrnTabsListDirective,\n\tBrnTabsTriggerDirective,\n\tBrnTabsContentDirective,\n] as const;\n\n@NgModule({\n\timports: [...BrnTabsImports],\n\texports: [...BrnTabsImports],\n})\nexport class BrnTabsModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["observableOf"],"mappings":"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"}