import { OnDestroy } from '@angular/core';
import * as i0 from "@angular/core";
export declare class BrnCalendarWeekDirective<T> implements OnDestroy {
    /** Access the calendar */
    private readonly _calendar;
    /** Access the view container ref */
    private readonly _viewContainerRef;
    /** Access the change detector */
    private readonly _changeDetector;
    /** Access the template ref */
    private readonly _templateRef;
    protected readonly weeks: import("@angular/core").Signal<T[][]>;
    /** Store the view refs */
    private readonly _viewRefs;
    static ngTemplateContextGuard<T>(_: BrnCalendarWeekDirective<T>, ctx: unknown): ctx is BrnWeekContext<T>;
    constructor();
    private _renderWeeks;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<BrnCalendarWeekDirective<any>, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<BrnCalendarWeekDirective<any>, "[brnCalendarWeek]", never, {}, {}, never, never, true, never>;
}
interface BrnWeekContext<T> {
    $implicit: T[];
}
export {};
