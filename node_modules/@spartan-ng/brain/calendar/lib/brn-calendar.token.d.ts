import { ExistingProvider, InjectionToken, Signal, Type, WritableSignal } from '@angular/core';
import { BrnCalendarHeaderDirective } from './brn-calendar-header.directive';
export interface BrnCalendar<T> {
    isSelected: (date: T) => boolean;
    selectDate: (date: T) => void;
    constrainDate: (date: T) => T;
    isDateDisabled: (date: T) => boolean;
    setFocusedDate: (date: T) => void;
    disabled: Signal<boolean>;
    focusedDate: Signal<T>;
    header: Signal<BrnCalendarHeaderDirective | undefined>;
    state: Signal<{
        focusedDate: WritableSignal<T>;
    }>;
    days: Signal<T[]>;
}
export declare const BrnCalendarToken: InjectionToken<BrnCalendar<unknown>>;
export declare function provideBrnCalendar<T>(instance: Type<BrnCalendar<T>>): ExistingProvider;
/**
 * Inject the calendar component.
 */
export declare function injectBrnCalendar<T>(): BrnCalendar<T>;
