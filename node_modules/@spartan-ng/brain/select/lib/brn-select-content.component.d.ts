import { AfterContentInit, ElementRef } from '@angular/core';
import { BrnSelectOptionDirective } from './brn-select-option.directive';
import { ActiveDescendantKeyManager } from '@angular/cdk/a11y';
import * as i0 from "@angular/core";
export declare class BrnSelectScrollUpDirective {
    private readonly _el;
    private readonly _selectContent;
    private readonly _endReached;
    private readonly _destroyRef;
    startEmittingEvents(): void;
    stopEmittingEvents(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<BrnSelectScrollUpDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<BrnSelectScrollUpDirective, "[brnSelectScrollUp], brn-select-scroll-up, hlm-select-scroll-up:not(noHlm)", never, {}, {}, never, never, true, never>;
}
export declare class BrnSelectScrollDownDirective {
    private readonly _el;
    private readonly _selectContent;
    private readonly _endReached;
    private readonly _destroyRef;
    startEmittingEvents(): void;
    stopEmittingEvents(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<BrnSelectScrollDownDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<BrnSelectScrollDownDirective, "[brnSelectScrollDown], brn-select-scroll-down, hlm-select-scroll-down:not(noHlm)", never, {}, {}, never, never, true, never>;
}
export declare class BrnSelectContentComponent<T> implements AfterContentInit {
    private readonly _elementRef;
    private readonly _injector;
    protected readonly _select: import("@spartan-ng/brain/select").BrnSelectComponent<T>;
    protected readonly canScrollUp: import("@angular/core").WritableSignal<boolean>;
    protected readonly canScrollDown: import("@angular/core").WritableSignal<boolean>;
    protected readonly viewport: import("@angular/core").Signal<ElementRef<HTMLElement>>;
    protected readonly scrollUpBtn: import("@angular/core").Signal<BrnSelectScrollUpDirective | undefined>;
    protected readonly scrollDownBtn: import("@angular/core").Signal<BrnSelectScrollDownDirective | undefined>;
    private readonly _options;
    /** @internal */
    keyManager: ActiveDescendantKeyManager<BrnSelectOptionDirective<T>> | null;
    constructor();
    ngAfterContentInit(): void;
    updateArrowDisplay(): void;
    handleScroll(): void;
    focusList(): void;
    moveFocusUp(): void;
    moveFocusDown(): void;
    setActiveOption(option: BrnSelectOptionDirective<T>): void;
    protected selectActiveItem(event: KeyboardEvent): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<BrnSelectContentComponent<any>, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<BrnSelectContentComponent<any>, "brn-select-content, hlm-select-content:not(noHlm)", never, {}, {}, ["scrollUpBtn", "scrollDownBtn", "_options"], ["hlm-select-scroll-up", "brnSelectScrollUp", "*", "brnSelectScrollDown", "hlm-select-scroll-down"], true, never>;
}
