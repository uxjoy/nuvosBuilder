import { type ComponentType } from '@angular/cdk/overlay';
import { type InjectOptions, type TemplateRef, type ViewContainerRef } from '@angular/core';
import type { BrnDialogOptions } from './brn-dialog-options';
import { BrnDialogRef } from './brn-dialog-ref';
import * as i0 from "@angular/core";
export type BrnDialogContext<T> = T & {
    close: (result?: any) => void;
};
/** @deprecated `injectBrnDialogCtx` will no longer be supported once components are stable. Use `injectBrnDialogContext` instead.  */
export declare const injectBrnDialogCtx: <T>() => BrnDialogContext<T>;
export declare const injectBrnDialogContext: <DialogContext = any>(options?: InjectOptions) => DialogContext;
export declare class BrnDialogService {
    private readonly _cdkDialog;
    private readonly _rendererFactory;
    private readonly _renderer;
    private readonly _positionBuilder;
    private readonly _sso;
    private readonly _injector;
    open<DialogContext>(content: ComponentType<unknown> | TemplateRef<unknown>, vcr?: ViewContainerRef, context?: DialogContext, options?: Partial<BrnDialogOptions>): BrnDialogRef<any>;
    static ɵfac: i0.ɵɵFactoryDeclaration<BrnDialogService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<BrnDialogService>;
}
