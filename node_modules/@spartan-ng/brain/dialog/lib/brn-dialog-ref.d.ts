import type { DialogRef } from '@angular/cdk/dialog';
import type { Signal, WritableSignal } from '@angular/core';
import { Observable } from 'rxjs';
import type { BrnDialogOptions } from './brn-dialog-options';
import type { BrnDialogState } from './brn-dialog-state';
export declare class BrnDialogRef<DialogResult = any> {
    private readonly _cdkDialogRef;
    private readonly _open;
    readonly state: Signal<BrnDialogState>;
    readonly dialogId: number;
    private readonly _options?;
    private readonly _closing$;
    readonly closing$: Observable<void>;
    readonly closed$: Observable<DialogResult | undefined>;
    private _previousTimeout;
    get open(): boolean;
    constructor(_cdkDialogRef: DialogRef<DialogResult>, _open: WritableSignal<boolean>, state: Signal<BrnDialogState>, dialogId: number, _options?: BrnDialogOptions | undefined);
    close(result?: DialogResult, delay?: number): void;
    setPanelClass(paneClass: string | null | undefined): void;
    setOverlayClass(overlayClass: string | null | undefined): void;
    setAriaDescribedBy(ariaDescribedBy: string | null | undefined): void;
    setAriaLabelledBy(ariaLabelledBy: string | null | undefined): void;
    setAriaLabel(ariaLabel: string | null | undefined): void;
}
