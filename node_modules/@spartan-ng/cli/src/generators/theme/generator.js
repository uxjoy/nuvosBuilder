"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = addThemeToApplicationGenerator;
const enquirer_1 = require("enquirer");
const get_project_names_1 = require("../../utils/get-project-names");
const add_theme_to_application_styles_1 = require("./libs/add-theme-to-application-styles");
const supported_theme_generator_map_1 = require("./libs/supported-theme-generator-map");
async function addThemeToApplicationGenerator(tree) {
    const { projects, projectNames } = (0, get_project_names_1.getProjectsAndNames)(tree);
    const response = await (0, enquirer_1.prompt)({
        type: 'select',
        required: true,
        name: 'app',
        message: 'Choose which application you want to add the theme to:',
        choices: projectNames,
    });
    const project = projects.get(response.app);
    if (!project)
        return;
    const themeOptions = await (0, enquirer_1.prompt)([
        {
            type: 'select',
            required: true,
            name: 'theme',
            message: 'Choose which theme to apply. You can always re-run this generator and add a custom prefix to add other themes.',
            choices: supported_theme_generator_map_1.SupportedThemes,
        },
        {
            type: 'select',
            required: true,
            name: 'radius',
            initial: 2,
            message: 'Which corner radius do you want to use with your theme:',
            choices: [...supported_theme_generator_map_1.SupportedRadii],
        },
        {
            type: 'input',
            name: 'stylesEntryPoint',
            message: "Path to the styles entry point relative to the workspace root. If not provided the generator will do its best to find it and it will error if it can't.",
        },
        {
            type: 'input',
            name: 'prefix',
            message: "Prefix class name applied to your theme's style definitions: e.g., theme-rose, theme-zinc. Leave empty for global theme.",
        },
    ]);
    (0, add_theme_to_application_styles_1.addThemeToApplicationStyles)(tree, {
        project: project.name,
        radius: Number.parseFloat(themeOptions.radius),
        theme: themeOptions.theme,
        addCdkStyles: themeOptions.addCdkStyles,
        stylesEntryPoint: themeOptions.stylesEntryPoint,
        prefix: themeOptions.prefix,
    }, project);
}
//# sourceMappingURL=generator.js.map