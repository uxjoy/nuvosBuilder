"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.printReport = printReport;
const tslib_1 = require("tslib");
const devkit_1 = require("@nx/devkit");
const picocolors_1 = tslib_1.__importDefault(require("picocolors"));
const healthchecks_1 = require("../healthchecks");
function printReport(report) {
    devkit_1.logger.log(`${getStatus(report.status)} ${report.name}`);
    // if this was a failure log the instructions
    if (report.status === healthchecks_1.HealthcheckStatus.Failure) {
        for (const issue of report.issues) {
            devkit_1.logger.log(`\t\t ${getSeverity(issue.severity)} ${issue.details}`);
        }
    }
    // if the healthcheck was skipped, log the reason
    if (report.status === healthchecks_1.HealthcheckStatus.Skipped) {
        devkit_1.logger.log(`\t\t ${picocolors_1.default.yellow(report.reason)}`);
    }
}
function getStatus(result) {
    switch (result) {
        case healthchecks_1.HealthcheckStatus.Success:
            return picocolors_1.default.green('[ ✔ ]');
        case healthchecks_1.HealthcheckStatus.Failure:
            return picocolors_1.default.red('[ ✖ ]');
        case healthchecks_1.HealthcheckStatus.Skipped:
            return picocolors_1.default.yellow('[ ! ]');
    }
}
function getSeverity(severity) {
    switch (severity) {
        case healthchecks_1.HealthcheckSeverity.Error:
            return picocolors_1.default.red('✖');
        case healthchecks_1.HealthcheckSeverity.Warning:
            return picocolors_1.default.yellow('!');
    }
}
//# sourceMappingURL=reporter.js.map