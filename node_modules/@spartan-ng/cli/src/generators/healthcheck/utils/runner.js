"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.runHealthcheck = runHealthcheck;
const healthchecks_1 = require("../healthchecks");
async function runHealthcheck(tree, healthcheck) {
    const report = {
        name: healthcheck.name,
        status: healthchecks_1.HealthcheckStatus.Success,
        fixable: false,
        healthcheck,
    };
    const failure = (details, severity, fixable) => {
        // check if this issue already exists
        if (report.issues?.some((issue) => issue.details === details)) {
            return;
        }
        report.status = healthchecks_1.HealthcheckStatus.Failure;
        report.issues ??= [];
        report.issues.push({ details, severity });
        report.fixable = report.fixable || (fixable && (0, healthchecks_1.isHealthcheckFixable)(healthcheck));
    };
    const skip = (reason) => {
        report.status = healthchecks_1.HealthcheckStatus.Skipped;
        report.reason = reason;
    };
    await coercePromise(healthcheck.detect(tree, failure, skip));
    return report;
}
function coercePromise(value) {
    return value instanceof Promise ? value : Promise.resolve(value);
}
//# sourceMappingURL=runner.js.map