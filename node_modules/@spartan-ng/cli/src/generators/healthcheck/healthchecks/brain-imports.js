"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.brainImportsHealthcheck = void 0;
const tslib_1 = require("tslib");
const devkit_1 = require("@nx/devkit");
const generator_1 = require("../../migrate-brain-imports/generator");
const import_map_1 = tslib_1.__importDefault(require("../../migrate-brain-imports/import-map"));
const healthchecks_1 = require("../healthchecks");
exports.brainImportsHealthcheck = {
    name: 'Brain imports',
    async detect(tree, failure) {
        (0, devkit_1.visitNotIgnoredFiles)(tree, '/', (file) => {
            // if the file is a .ts or .json file, check for brain imports/packages
            if (!file.endsWith('.ts') || file.endsWith('.json')) {
                return;
            }
            const contents = tree.read(file, 'utf-8');
            if (!contents) {
                return;
            }
            for (const [importPath, brainPackage] of Object.entries(import_map_1.default)) {
                if (contents.includes(importPath)) {
                    failure(`The import ${importPath} is deprecated. Please use the ${brainPackage} package instead.`, healthchecks_1.HealthcheckSeverity.Error, true);
                }
            }
        });
    },
    fix: async (tree) => {
        await (0, generator_1.migrateBrainImportsGenerator)(tree, { skipFormat: true });
        return true;
    },
    prompt: 'Would you like to migrate brain imports?',
};
//# sourceMappingURL=brain-imports.js.map