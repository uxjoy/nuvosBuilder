{
  "version": 3,
  "sources": ["../../../../../../node_modules/@spartan-ng/brain/fesm2022/spartan-ng-brain-label.mjs"],
  "sourcesContent": ["import * as i0 from '@angular/core';\nimport { inject, input, PLATFORM_ID, ElementRef, signal, Directive, NgModule } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { NgControl } from '@angular/forms';\nlet nextId = 0;\nclass BrnLabelDirective {\n  _ngControl = inject(NgControl, {\n    optional: true\n  });\n  id = input(`brn-label-${nextId++}`);\n  _isBrowser = isPlatformBrowser(inject(PLATFORM_ID));\n  _element = inject(ElementRef).nativeElement;\n  _changes;\n  _dataDisabled = signal('auto');\n  dataDisabled = this._dataDisabled.asReadonly();\n  ngOnInit() {\n    if (!this._isBrowser) return;\n    this._changes = new MutationObserver(mutations => {\n      mutations.forEach(mutation => {\n        if (mutation.attributeName !== 'data-disabled') return;\n        // eslint-disable-next-line\n        const state = mutation.target.attributes.getNamedItem(mutation.attributeName)?.value === 'true';\n        this._dataDisabled.set(state ?? 'auto');\n      });\n    });\n    this._changes?.observe(this._element, {\n      attributes: true,\n      childList: true,\n      characterData: true\n    });\n  }\n  /** @nocollapse */\n  static ɵfac = function BrnLabelDirective_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || BrnLabelDirective)();\n  };\n  /** @nocollapse */\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: BrnLabelDirective,\n    selectors: [[\"\", \"brnLabel\", \"\"]],\n    hostVars: 9,\n    hostBindings: function BrnLabelDirective_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵhostProperty(\"id\", ctx.id());\n        i0.ɵɵclassProp(\"ng-invalid\", (ctx._ngControl == null ? null : ctx._ngControl.invalid) || null)(\"ng-dirty\", (ctx._ngControl == null ? null : ctx._ngControl.dirty) || null)(\"ng-valid\", (ctx._ngControl == null ? null : ctx._ngControl.valid) || null)(\"ng-touched\", (ctx._ngControl == null ? null : ctx._ngControl.touched) || null);\n      }\n    },\n    inputs: {\n      id: [1, \"id\"]\n    }\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BrnLabelDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[brnLabel]',\n      standalone: true,\n      host: {\n        '[id]': 'id()',\n        '[class.ng-invalid]': 'this._ngControl?.invalid || null',\n        '[class.ng-dirty]': 'this._ngControl?.dirty || null',\n        '[class.ng-valid]': 'this._ngControl?.valid || null',\n        '[class.ng-touched]': 'this._ngControl?.touched || null'\n      }\n    }]\n  }], null, null);\n})();\nclass BrnLabelModule {\n  /** @nocollapse */static ɵfac = function BrnLabelModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || BrnLabelModule)();\n  };\n  /** @nocollapse */\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: BrnLabelModule,\n    imports: [BrnLabelDirective],\n    exports: [BrnLabelDirective]\n  });\n  /** @nocollapse */\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BrnLabelModule, [{\n    type: NgModule,\n    args: [{\n      imports: [BrnLabelDirective],\n      exports: [BrnLabelDirective]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BrnLabelDirective, BrnLabelModule };\n"],
  "mappings": "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",
  "names": []
}
